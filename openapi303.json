{"openapi": "3.1.0", "info": {"title": "zerocopter", "version": "0.1.0"}, "paths": {"/api/v1/login/access-token": {"post": {"tags": ["login"], "summary": "Login Access Token", "description": "OAuth2 compatible token login, get an access token for future requests\n\nReturns:\n- access_token (str): The access token for future requests.\n- token_type (str): The type of token, which is always \"bearer\".", "operationId": "login_access_token_api_v1_login_access_token_post", "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/Body_login_access_token_api_v1_login_access_token_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Token"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/login/claims": {"get": {"tags": ["login"], "summary": "Get Login Claims", "description": "Returns the claims for the current user.\n\nReturns:\n    Any: The claims for the current user.", "operationId": "get_login_claims_api_v1_login_claims_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"title": "Response Get Login Claims Api V1 Login Claims Get"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/v1/users/": {"get": {"tags": ["users"], "summary": "List Users", "description": "Retrieve users.\n\nAccess Control:\n- Admin and Moderator roles\n\nParameters:\n- skip: int | None = None\n    Number of records to skip.\n- limit: int | None = None\n    Maximum number of records to return.\n- active_user_principals: Depends(deps.ActiveUserPrincipals())\n    Dependency to get the active user principals.\n- current_user: models.User = Depends(deps.User(auth_required=True))\n    Dependency to get the current user.\n\nReturns:\n- Any\n    List of users.\n\nRaises:\n- None", "operationId": "list_users_api_v1_users__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer", "nullable": true}], "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer", "nullable": true}], "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/UserDetails"}, "title": "Response List Users Api V1 Users  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["users"], "summary": "Create User", "description": "Create new user.\n\nAccess Control:\n- Admin and Moderator roles\n\n:param user_in: UserCreate schema\n:type user_in: schemas.UserCreate\n:return: Created user object\n:rtype: Any", "operationId": "create_user_api_v1_users__post", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserDetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/users/me": {"get": {"tags": ["users"], "summary": "Read User Me", "description": "Get the details of the currently authenticated user.\n\nThis function returns the details of the currently authenticated user.\n\nReturns:\n    Any: The details of the currently authenticated user.", "operationId": "read_user_me_api_v1_users_me_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserDetails"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}, "put": {"tags": ["users"], "summary": "Update User Me", "description": "Update own user.\n\nParameters:\n-----------\npassword: str\n    The new password for the user.\nlast_name: str\n    The new last name for the user.\nemail: EmailStr\n    The new email address for the user.\n\nReturns:\n--------\nAny\n    The updated user object.", "operationId": "update_user_me_api_v1_users_me_put", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Body_update_user_me_api_v1_users_me_put"}], "title": "Body"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserDetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/v1/users/open": {"post": {"tags": ["users"], "summary": "Create User Open", "description": "Create new user without the need to be logged in.\n\nArgs:\n    password (str): The user's password.\n    email (EmailStr): The user's email address.\n    username (str): The user's username.\n    full_name (str, optional): The user's full name.\n\nReturns:\n    Any: The newly created user object.\n\nRaises:\n    HTTPException: If open user registration is forbidden on this server or if a user with the same email already exists.", "operationId": "create_user_open_api_v1_users_open_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_create_user_open_api_v1_users_open_post"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserDetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/users/{user_id}": {"get": {"tags": ["users"], "summary": "Read User", "description": "Get a specific user by id.\n\nParameters:\n-----------\nuser_id : UUID\n    The id of the user to retrieve.\n\nReturns:\n--------\nAny\n    The user details.", "operationId": "read_user_api_v1_users__user_id__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserDetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["users"], "summary": "Update User", "description": "Update a user.\n\nParameters:\n-----------\nuser_id: UUID\n    The ID of the user to update.\nuser_in: schemas.UserUpdate\n\nReturns:\n--------\nAny\n    The updated user data.", "operationId": "update_user_api_v1_users__user_id__patch", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "User Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserDetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/users/{user_id}/assignments": {"get": {"tags": ["users"], "summary": "List Assignments", "description": "Get assignments for a specific user", "operationId": "list_assignments_api_v1_users__user_id__assignments_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/Assignment"}, "title": "Response List Assignments Api V1 Users  User Id  Assignments Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/users/{user_id}/findings": {"get": {"tags": ["users"], "summary": "Get User Findings", "description": "Retrieve the findings authored by a user.\n\nArguments:\n- user_id: UUID - The ID of the user whose findings to retrieve.\n- current_user: models.User - The current user making the request.\n\nReturns:\n- Any: The findings authored by the user.", "operationId": "get_user_findings_api_v1_users__user_id__findings_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/FindingSummary"}, "title": "Response Get User Findings Api V1 Users  User Id  Findings Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/users/{user_id}/roles": {"patch": {"tags": ["users"], "summary": "Update User Roles", "description": "Update the roles of a user with the given user_id.\n\nArgs:\n    user_id (UUID): The ID of the user to update.\n    roles (Set[str]): The new roles to assign to the user.\n\nRaises:\n    NotImplementedError: This function is not yet implemented.\n\nReturns:\n    Any: The updated user object.", "operationId": "update_user_roles_api_v1_users__user_id__roles_patch", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "User Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "array", "uniqueItems": true, "items": {"type": "string"}, "title": "Roles"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserDetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/organizations/": {"get": {"tags": ["organizations"], "summary": "List Organizations", "description": "Retrieve organizations.\n\nAccess:\n- Admin\n- Moderator role\n\n:param skip: Number of records to skip.\n:type skip: int\n:param limit: Maximum number of records to return.\n:type limit: int\n:return: List of organizations.\n:rtype: Any", "operationId": "list_organizations_api_v1_organizations__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/OrganizationSummary"}, "title": "Response List Organizations Api V1 Organizations  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["organizations"], "summary": "Create Organization", "description": "Create new organization.\n\nAccess:\n- Admin role\n\nParameters:\n- item_in: schemas.OrganizationCreate - The organization data to be created.\n\nReturns:\n- Any - The created organization.", "operationId": "create_organization_api_v1_organizations__post", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrganizationCreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrganizationDetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/organizations/{id}": {"get": {"tags": ["organizations"], "summary": "Read Organization Details", "description": "Get organization details by ID.\n\nAccess:\n- Admin role\n- Moderator role\n- Organization members\n\n:param id: UUID of the organization to retrieve\n:return: organization details", "operationId": "read_organization_details_api_v1_organizations__id__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrganizationDetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["organizations"], "summary": "Update Organization", "description": "Update an existing organization.\n\nAccess:\n- Admin\n- Organization Admin\n\n:param id: UUID of the organization to update\n:type id: UUID\n:param item_in: Updated organization data\n:type item_in: schemas.OrganizationUpdate\n:return: Updated organization data\n:rtype: Any", "operationId": "update_organization_api_v1_organizations__id__patch", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrganizationUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrganizationDetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/organizations/{id}/members/": {"get": {"tags": ["organizations"], "summary": "List Organization Members", "description": "Retrieve members from a specific organization.\n\nAccess:\n- Admin\n- Moderator\n- Organization member\n- Organization admin\n\n:param id: UUID of the organization to retrieve members from\n:param skip: number of members to skip\n:param limit: maximum number of members to retrieve\n:param admins_only: whether to retrieve only admin members\n:return: list of User objects representing the members of the organization", "operationId": "list_organization_members_api_v1_organizations__id__members__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}, {"name": "admins_only", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "Admins Only"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/UserSummary"}, "title": "Response List Organization Members Api V1 Organizations  Id  Members  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["organizations"], "summary": "Add Organization Members", "description": "Add organization members.\n\nThis function adds members to an organization. It requires the ID of the organization\nand a list of member objects to add. The function also requires authentication.\n\n:param id: The ID of the organization to add members to.\n:type id: UUID\n:param members_in: A list of member objects to add to the organization.\n:type members_in: List[schemas.OrganizationMemberCreate]\n:param skip: The number of items to skip in the result set.\n:type skip: int\n:param limit: The maximum number of items to return.\n:type limit: int\n:return: The result of adding the members to the organization.\n:rtype: Any", "operationId": "add_organization_members_api_v1_organizations__id__members__post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/OrganizationMemberCreate"}, "title": "Members In"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/UserSummary"}, "title": "Response Add Organization Members Api V1 Organizations  Id  Members  Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/organizations/{id}/invitations/": {"get": {"tags": ["organizations"], "summary": "List Organization Invitiations", "description": "Retrieve invitations from a specific organization.\n\nAccess:\n- Admin\n\n:param id: UUID of the organization to retrieve invitations from\n:param skip: number of invitations to skip\n:param limit: maximum number of invitations to retrieve\n:return: list of invitations", "operationId": "list_organization_invitiations_api_v1_organizations__id__invitations__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/InvitationSummary"}, "title": "Response List Organization Invitiations Api V1 Organizations  Id  Invitations  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/organizations/{organization_id}/members/": {"patch": {"tags": ["organizations"], "summary": "Update Organization Members", "description": "Add/update organization members.\n\nAccess:\n- Admin role\n- Organization Admin\n\n:param organization_id: UUID of the organization to update.\n:param members_in: List of schemas.TeamMembershipUpdate objects representing the members to add/update.\n:return: Any", "operationId": "update_organization_members_api_v1_organizations__organization_id__members__patch", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "organization_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Organization Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/TeamMembershipUpdate"}, "title": "Members In"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/TeamMembershipUpdate"}, "title": "Response Update Organization Members Api V1 Organizations  Organization Id  Members  Patch"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/organizations/{id}/members/{member_id}": {"patch": {"tags": ["organizations"], "summary": "Patch Organization Membership", "description": "Update an organization member's details.\n\nArgs:\n    id (UUID): The ID of the organization.\n    member_id (UUID): The ID of the member to update.\n    item_in (schemas.OrganizationMemberUpdate): The updated member details.\n\nReturns:\n    Any: The updated organization member.", "operationId": "patch_organization_membership_api_v1_organizations__id__members__member_id__patch", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}, {"name": "member_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Member Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrganizationMemberUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrganizationMemberSummary"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/organizations/argo_callback/{id}": {"post": {"tags": ["organizations"], "summary": "Argo Callback", "description": "After Organization is created and Argo Events provision a new instance of\nDefect Dojo, this endpoint receives one-time Vault secret and Defect Dojo instance hostname,\nregisters hostname in Global Catalog, and calls Sensei webhook.\n\n:param id: UUID of the organization to provision Defect Dojo for\n:type id: UUID\n:param payload: Payload containing the one-time Vault secret and Defect Dojo instance hostname\n:type payload: schemas.OrganizationCreateArgoCallback\n:return: Any", "operationId": "argo_callback_api_v1_organizations_argo_callback__id__post", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrganizationCreateArgoCallback"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"title": "Response Argo Callback Api V1 Organizations Argo Callback  Id  Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/organizations/{id}/teams/": {"get": {"tags": ["organizations"], "summary": "List Organization Teams", "description": "Retrieve a list of teams belonging to the organization with the specified ID.\n\nArguments:\n- id: UUID - The ID of the organization to retrieve teams for.\n- skip: int - The number of teams to skip (for pagination).\n- limit: int - The maximum number of teams to retrieve.\n- _current_user: list - The current user (authenticated via JWT).\n\nReturns:\n- Any - A list of teams belonging to the specified organization.", "operationId": "list_organization_teams_api_v1_organizations__id__teams__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/TeamSummary"}, "title": "Response List Organization Teams Api V1 Organizations  Id  Teams  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["organizations"], "summary": "Create Organization Team", "description": "Create a new team for an organization.\n\nArgs:\n    id (UUID): The ID of the organization to create the team for.\n    team_data (schemas.TeamCreate): The data for the new team.\n\nReturns:\n    Any: The newly created team.", "operationId": "create_organization_team_api_v1_organizations__id__teams__post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TeamCreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TeamSummary"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/organizations/{id}/programs/": {"get": {"tags": ["organizations"], "summary": "List Organization Programs", "description": "Retrieve a list of programs belonging to the organization with the specified ID.\n\nArguments:\n- id: UUID - The ID of the organization to retrieve programs for.\n- skip: int - The number of programs to skip before returning results (default: 0).\n- limit: int - The maximum number of programs to return (default: 100).\n- _current_user: models.User - The current authenticated user (injected by dependency).\n- filters: dict - Additional filters to apply to the query (injected by dependency).\n\nReturns:\n- Any - A list of programs belonging to the specified organization.", "operationId": "list_organization_programs_api_v1_organizations__id__programs__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/ProgramSummary"}, "title": "Response List Organization Programs Api V1 Organizations  Id  Programs  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/organizations/{id}/bounties/": {"get": {"tags": ["organizations"], "summary": "Get Bounty Table", "operationId": "get_bounty_table_api_v1_organizations__id__bounties__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BountyTable"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["organizations"], "summary": "Update Bounty Table", "operationId": "update_bounty_table_api_v1_organizations__id__bounties__post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BountyTableCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BountyTable"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["organizations"], "summary": "Delete Bounty Table", "operationId": "delete_bounty_table_api_v1_organizations__id__bounties__delete", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/programs/": {"get": {"tags": ["programs"], "summary": "List Programs", "description": "Retrieve a list of programs.\n\nThis function retrieves a list of programs based on the provided filters, skip and limit parameters.\nThe active user's principals are used to determine if the user has permission to read each program.\n\n:param request: The incoming request.\n:param skip: The number of programs to skip.\n:param limit: The maximum number of programs to retrieve.\n:param filters: The filters to apply to the programs.\n:return: A list of programs.", "operationId": "list_programs_api_v1_programs__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": -1, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/ProgramDetails"}, "title": "Response List Programs Api V1 Programs  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["programs"], "summary": "Create Program", "description": "Create new program. When `admin_id` is omitted, the current user is\nassigned as a Program Admin\n\nAccess:\n- Admin role\n- Update permissions to the program (e.g. Program Admin)\n\nArgs:\n- item_in (schemas.ProgramCreate): The program to be created\n- current_user (models.User): The current user\n- active_user_principals (list): The active user principals\n\nReturns:\n- Any: The created program", "operationId": "create_program_api_v1_programs__post", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProgramCreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProgramDetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/programs/{id}": {"get": {"tags": ["programs"], "summary": "Read Program", "description": "Get program by ID.\n\nArgs:\n    id (UUID): The ID of the program to retrieve.\n\nReturns:\n    Any: The program with the specified ID.", "operationId": "read_program_api_v1_programs__id__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProgramDetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/programs/{program_id}": {"patch": {"tags": ["programs"], "summary": "Update Program", "description": "Update an existing program with the specified program_id using the provided\nProgramUpdate object.\n\nArgs:\n    program_id (UUID): The ID of the program to update.\n    obj_in (schemas.ProgramUpdate): The updated program data.\n    active_user_principals (list, optional): The list of user principals. Defaults to\n        Depends(deps.ActiveUserPrincipals(auth_required=True)).\n\nReturns:\n    Any: The updated program.", "operationId": "update_program_api_v1_programs__program_id__patch", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "program_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Program Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProgramUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProgramDetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/programs/{id}/action": {"post": {"tags": ["programs"], "summary": "Change Program Status", "description": "Change a program's status.\n\nArgs:\n    id (UUID): The ID of the program to update.\n    obj_in (schemas.program.ProgramStatusUpdate): The updated program status.\n\nReturns:\n    Any: The updated program.", "operationId": "change_program_status_api_v1_programs__id__action_post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProgramStatusUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProgramDetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/programs/{id}/policy": {"get": {"tags": ["programs"], "summary": "Read Program Policy", "description": "Get a program's policy by Program ID.\n\nArgs:\n    id (UUID): The ID of the program to get the policy for.\n\nReturns:\n    Any: The policy for the specified program.\n\nRaises:\n    HTTPException: If the policy is not found.", "operationId": "read_program_policy_api_v1_programs__id__policy_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NDADetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/programs/{id}/ndas": {"get": {"tags": ["programs"], "summary": "Read Program Ndas", "description": "List NDAs for a specific program ID.\n\nAccess:\n- Admin\n\n:param id: UUID of the program to retrieve NDAs for\n:type id: UUID\n\n:return: list of NDAs for the specified program\n:rtype: Any", "operationId": "read_program_ndas_api_v1_programs__id__ndas_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/NDADetails"}, "title": "Response Read Program Ndas Api V1 Programs  Id  Ndas Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/programs/{id}/findings": {"get": {"tags": ["programs"], "summary": "List Program Findings", "description": "List findings for a specific program ID.\n\nAccess:\n- Admin\n- Program member\n\n:param request: The incoming request.\n:param id: The ID of the program to list findings for.\n:param filters: Optional filters to apply to the findings list.\n:return: A list of findings for the specified program ID.", "operationId": "list_program_findings_api_v1_programs__id__findings_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/FindingSummary"}, "title": "Response List Program Findings Api V1 Programs  Id  Findings Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/programs/{id}/invitations": {"get": {"tags": ["programs"], "summary": "Read Program Invitations", "description": "List invitations for a specific program ID.\n\nArgs:\n    id (UUID): The ID of the program to list invitations for.\n\nReturns:\n    Any: The list of invitations for the specified program ID.", "operationId": "read_program_invitations_api_v1_programs__id__invitations_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/InvitationDetails"}, "title": "Response Read Program Invitations Api V1 Programs  Id  Invitations Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/programs/{id}/participations/": {"get": {"tags": ["programs"], "summary": "List Program Participations", "description": "List participations for the specified program ID.\n\nParameters:\n-----------\nid : UUID\n    The ID of the program to list participations for.\nskip : int, optional\n    Number of participations to skip, by default 0\nlimit : int, optional\n    Maximum number of participations to return, by default 100\n\nReturns:\n--------\nAny\n    A list of User objects representing the program participants.", "operationId": "list_program_participations_api_v1_programs__id__participations__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/UserSummary"}, "title": "Response List Program Participations Api V1 Programs  Id  Participations  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["programs"], "summary": "Patch Participations", "description": "Add/update organization members.\n\nAccess:\n- Admin role\n- Organization Admin\n\n:param id: UUID of the program to update participations for\n:param members_in: List of ParticipationUpdate objects representing the members to add/update\n:param skip: Number of records to skip\n:param limit: Maximum number of records to return\n:return: Any", "operationId": "patch_participations_api_v1_programs__id__participations__patch", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/ParticipationUpdate"}, "title": "Members In"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/UserSummary"}, "title": "Response Patch Participations Api V1 Programs  Id  Participations  Patch"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/programs/{id}/bounties/": {"get": {"tags": ["programs"], "summary": "Get Bounty Table", "operationId": "get_bounty_table_api_v1_programs__id__bounties__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BountyTable"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["programs"], "summary": "Update Bounty Table", "operationId": "update_bounty_table_api_v1_programs__id__bounties__post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BountyTableCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BountyTable"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["programs"], "summary": "Delete Bounty Table", "operationId": "delete_bounty_table_api_v1_programs__id__bounties__delete", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/ndas/": {"get": {"tags": ["ndas"], "summary": "List Ndas", "description": "Retrieve NDAs.\n\nAccess:\n- Admin role\n\n:param skip: Number of records to skip\n:type skip: int\n:param limit: Maximum number of records to return\n:type limit: int\n:return: List of NDAs\n:rtype: Any", "operationId": "list_ndas_api_v1_ndas__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/NDADetails"}, "title": "Response List Ndas Api V1 Ndas  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["ndas"], "summary": "Create Nda", "description": "Create a new NDA.\n\nAccess:\n- Admin role (TBD)\n- Organization Admin (TBD)\n- Program Admin (TBD)\n\n:param item_in: The NDA to create.\n:type item_in: schemas.NDACreate\n:param acls: The access control list.\n:type acls: list\n:param active_user_principals: The active user principals.\n:type active_user_principals: list\n:return: The newly created NDA.\n:rtype: Any", "operationId": "create_nda_api_v1_ndas__post", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NDACreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NDADetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/ndas/{id}": {"get": {"tags": ["ndas"], "summary": "Read Nda", "description": "Get NDA by ID.\n\nAccess:\n- Admin role (TBD)\n- Invitees on a related program or organization (TBD)\n\n:param id: UUID of the NDA to retrieve\n:type id: UUID\n:return: The retrieved NDA\n:rtype: Any", "operationId": "read_nda_api_v1_ndas__id__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NDADetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["ndas"], "summary": "Update Nda", "description": "Update NDA. As the current version of an NDA may have completed/pending acceptation,\neffectively a\nnew NDA will be created.\n\nAccess:\n- Admin role (TBD)\n- Organization Admin (TBD)\n- Program Admin (TBD)\n\n:param id: UUID of the NDA to update\n:type id: UUID\n:param item_in: Updated NDA data\n:type item_in: schemas.NDAUpdate\n:return: Updated NDA data\n:rtype: Any", "operationId": "update_nda_api_v1_ndas__id__patch", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NDAUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NDADetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/invitations/": {"get": {"tags": ["invitations"], "summary": "List Invitations", "description": "Retrieve a list of invitations.\n\nArgs:\n    skip (int): The number of invitations to skip.\n    limit (int): The maximum number of invitations to retrieve.\n\nReturns:\n    Any: A list of invitations.", "operationId": "list_invitations_api_v1_invitations__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/InvitationSummary"}, "title": "Response List Invitations Api V1 Invitations  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["invitations"], "summary": "Create Invitation", "description": "Create new invitation.\n\nArgs:\nitem_in (schemas.InvitationCreate): The invitation to be created.\n\nReturns:\n    Any: The created invitation.", "operationId": "create_invitation_api_v1_invitations__post", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvitationCreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvitationDetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/teams/": {"get": {"tags": ["users", "teams"], "summary": "List Teams", "description": "Retrieve a list of teams.\n\nParameters:\n-----------\nskip : int, optional\n    Number of teams to skip.\nlimit : int, optional\n    Maximum number of teams to return.\n\nReturns:\n--------\nAny\n    A list of teams.", "operationId": "list_teams_api_v1_teams__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer", "nullable": true}], "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer", "nullable": true}], "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/TeamSummary"}, "title": "Response List Teams Api V1 Teams  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["users", "teams"], "summary": "Create Team", "description": "Create a new team and assign the current user as an admin and budget holder.\n\nArgs:\n    obj_in (schemas.TeamCreate): The team data to create.\n\nReturns:\n    Any: The created team.", "operationId": "create_team_api_v1_teams__post", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TeamCreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TeamDetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/teams/{id}": {"get": {"tags": ["users", "teams"], "summary": "Read Team", "description": "Retrieve a specific team.\n\nArgs:\n    id (UUID): The ID of the team to retrieve.\n\nReturns:\n    Any: The retrieved team.", "operationId": "read_team_api_v1_teams__id__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TeamDetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["users", "teams"], "summary": "Update Team", "description": "Update a specific team.\n\nArgs:\n    id (UUID): The ID of the team to update.\n    obj_in (schemas.TeamUpdate): The updated team data.\n\nReturns:\n    Any: The updated team.", "operationId": "update_team_api_v1_teams__id__patch", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TeamInDBUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TeamDetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/teams/{id}/invitations/": {"get": {"tags": ["users", "teams"], "summary": "List Team Invitations", "description": "Retrieve invitations for a team.\n\nArgs:\n    id (UUID): The ID of the team to retrieve invitations for.\n    skip (int, optional): The number of invitations to skip. Defaults to 0.\n    limit (int, optional): The maximum number of invitations to retrieve. Defaults to 100.\n\nReturns:\n    list: A list of team invitations.", "operationId": "list_team_invitations_api_v1_teams__id__invitations__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/InvitationSummary"}, "title": "Response List Team Invitations Api V1 Teams  Id  Invitations  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["users", "teams"], "summary": "Create Team Invitation", "description": "Create invitations for a team.\n\nParameters:\n- id: UUID - The ID of the team to create invitations for.\n- invitations: list[schemas.InvitationCreate] - A list of invitation objects to create.\n- current_user: models.User - The user creating the invitations.\n- active_user_principals - The active user principals.\n\nReturns:\n- List of created invitation objects.", "operationId": "create_team_invitation_api_v1_teams__id__invitations__post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/InvitationCreate"}, "title": "Invitations"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/InvitationSummary"}, "title": "Response Create Team Invitation Api V1 Teams  Id  Invitations  Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/teams/{id}/members/": {"get": {"tags": ["users", "teams"], "summary": "Read Team Members", "description": "Retrieve team members.\n\nArgs:\n    id (UUID): The ID of the team to retrieve members for.\n    skip (int, optional): The number of records to skip. Defaults to 0.\n    limit (int, optional): The maximum number of records to retrieve. Defaults to 100.\n\nReturns:\n    List[models.User]: A list of user models representing the members of the team.", "operationId": "read_team_members_api_v1_teams__id__members__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/UserDetails"}, "title": "Response Read Team Members Api V1 Teams  Id  Members  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["users", "teams"], "summary": "Update Team Membership", "description": "Update team memberships.\n\nThis function updates the membership of a team with the given ID. The new\nmembership is specified by the `members_in` parameter, which is a list of\n`TeamMembershipUpdate` objects. The `active_user_principals` parameter is\nused to authenticate the user making the request. The `skip` and `limit`\nparameters are used for pagination.\n\n:param id: The ID of the team to update.\n:type id: UUID\n:param members_in: The new membership of the team.\n:type members_in: List[schemas.TeamMembershipUpdate]\n:param skip: The number of items to skip in the result set.\n:type skip: int\n:param limit: The maximum number of items to return.\n:type limit: int\n:return: The updated team membership.\n:rtype: Any", "operationId": "update_team_membership_api_v1_teams__id__members__patch", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/TeamMembershipUpdate"}, "title": "Members In"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/TeamMembershipUpdate"}, "title": "Response Update Team Membership Api V1 Teams  Id  Members  Patch"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/teams/{id}/members/{user_id}": {"delete": {"tags": ["users", "teams"], "summary": "Delete Team Membership", "description": "Delete a team membership.\n\nArgs:\n    id (UUID): The ID of the team to remove the membership from.\n    user_id (UUID): The ID of the user to remove from the team.\n\nReturns:\n    None", "operationId": "delete_team_membership_api_v1_teams__id__members__user_id__delete", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}, {"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "User Id"}}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/templates/": {"get": {"tags": ["templates"], "summary": "List Templates", "description": "Retrieve Templates.\n\nAccess:\n- Admin role\n\n:param skip: Number of templates to skip.\n:type skip: int\n:param limit: Maximum number of templates to retrieve.\n:type limit: int\n:return: List of templates.\n:rtype: Any", "operationId": "list_templates_api_v1_templates__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/TemplateSummary"}, "title": "Response List Templates Api V1 Templates  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["templates"], "summary": "Add Template", "description": "Add template.\n\nAccess:\n- Admin role\n\n:param obj_in: The template object to be created.\n:type obj_in: schemas.TemplateCreate\n:return: The created template object.\n:rtype: Any", "operationId": "add_template_api_v1_templates__post", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TemplateCreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TemplateDetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/findings/": {"get": {"tags": ["findings"], "summary": "List Findings", "description": "Retrieve findings.\n\nParameters:\n- skip: int = 0\n- limit: int = 100\n- filters: Depends(deps.filters)\n\nReturns:\n- List of findings that the user has permission to read.", "operationId": "list_findings_api_v1_findings__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/FindingSummary"}, "title": "Response List Findings Api V1 Findings  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["findings"], "summary": "Create Report", "description": "Create a new report.\n\n:param obj_in: The finding object to be created.\n:type obj_in: schemas.finding.FindingCreate\n:param draft: Whether the report is a draft or not.\n:type draft: bool\n:raises HTTPException 401: If the user is not authorized to create a draft report.\n:return: The created finding object.\n:rtype: schemas.finding.FindingDB", "operationId": "create_report_api_v1_findings__post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "draft", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "Draft"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FindingCreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FindingDetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/findings/{report_id}": {"get": {"tags": ["findings"], "summary": "Read Report", "description": "Retrieve a specific report.\n\nArgs:\n    report_id (UUID): The ID of the report to retrieve.\n    active_user_principals (list, optional): The list of active user principals. Defaults to Depends(deps.ActiveUserPrincipals(auth_required=True)).\n\nReturns:\n    Any: The retrieved report.", "operationId": "read_report_api_v1_findings__report_id__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "report_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Report Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FindingDetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/findings/{report_id}/assignments": {"get": {"tags": ["findings"], "summary": "Read Assignments", "description": "Retrieve a report's assignments.\n\nArgs:\n    report_id (UUID): The ID of the report to retrieve assignments for.\n\nReturns:\n    Any: The report's assignments.", "operationId": "read_assignments_api_v1_findings__report_id__assignments_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "report_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Report Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/Assignment"}, "title": "Response Read Assignments Api V1 Findings  Report Id  Assignments Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/findings/{finding_id}": {"patch": {"tags": ["findings"], "summary": "Patch Report", "description": "Add/update report.\n\nAccess:\n- User/Creator\n- Admin\n- Moderator\n\n:param finding_id: UUID of the finding to update\n:param obj_in: schema object containing the updated finding data\n:return: the updated finding object", "operationId": "patch_report_api_v1_findings__finding_id__patch", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "finding_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Finding Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FindingInDBBaseUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FindingDetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/findings/{report_id}/action": {"post": {"tags": ["findings"], "summary": "Perform Finding Action", "description": "Assign a user to a finding.\n\nAccess:\n- Admin\n- Program Admin\n- Program Member\n\nThe following states are restricted to Triage:\n    - accepted, rejected, duplicate\nAll other states are allowed to be set by customers, but Triage/CS can set these\non their behalf\n'Resolved' can also be set by researchers (only from retest requested),\nbut only if a payout is linked\n\n:param report_id: UUID of the report to perform the action on\n:param obj_in: The action to perform on the report\n:return: The updated finding", "operationId": "perform_finding_action_api_v1_findings__report_id__action_post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "report_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Report Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/FindingSubmitUserAction"}, {"$ref": "#/components/schemas/FindingAssignUserAction"}, {"$ref": "#/components/schemas/FindingUnAssignUserAction"}, {"$ref": "#/components/schemas/FindingRejectAction"}, {"$ref": "#/components/schemas/FindingAcceptAction"}, {"$ref": "#/components/schemas/FindingResolvedAction"}, {"$ref": "#/components/schemas/FindingMarkWorkInProgressAction"}, {"$ref": "#/components/schemas/FindingMarkFalsePositiveAction"}, {"$ref": "#/components/schemas/FindingRetestRequestedAction"}], "title": "Obj In"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FindingDetails"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/findings/{report_id}/comments/": {"get": {"tags": ["findings"], "summary": "List Comments", "description": "Retrieve a list of comments on a report.\n\nArgs:\n    report_id (UUID): The ID of the report to retrieve comments for.\n    include_deleted (bool, optional): Whether to include deleted comments in the results. Defaults to False.\n    skip (int, optional): The number of comments to skip. Defaults to 0.\n    limit (int, optional): The maximum number of comments to retrieve. Defaults to 100.\n\nReturns:\n    list: A list of comments on the report.", "operationId": "list_comments_api_v1_findings__report_id__comments__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "report_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Report Id"}}, {"name": "include_deleted", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "Include Deleted"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/Comment"}, "title": "Response List Comments Api V1 Findings  Report Id  Comments  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["findings"], "summary": "Create Comment", "description": "Create a new comment for a finding.\n\nArgs:\n    report_id (UUID): The ID of the report to add the comment to.\n    obj_in (schemas.CommentCreate): The comment data to create.\n    current_user (models.User, optional): The current user creating the comment. Defaults to the authenticated user.\n\nReturns:\n    Any: The created comment.", "operationId": "create_comment_api_v1_findings__report_id__comments__post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "report_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Report Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CommentCreate"}}}}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Comment"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/findings/{report_id}/comments/{comment_id}": {"get": {"tags": ["findings"], "summary": "Read Comment", "description": "Read a comment for a given finding.\n\nArgs:\n    report_id (UUID): The ID of the report.\n    comment_id (UUID): The ID of the comment to read.\n\nReturns:\n    Any: The transformed comment.", "operationId": "read_comment_api_v1_findings__report_id__comments__comment_id__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "report_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Report Id"}}, {"name": "comment_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Comment Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Comment"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["findings"], "summary": "Delete Comment", "description": "Delete a comment from a report.\n\nArgs:\n    report_id (UUID): The ID of the report containing the comment.\n    comment_id (UUID): The ID of the comment to delete.\n    hard (bool, optional): Whether to perform a hard delete. Defaults to False.\n    current_user (models.User, optional): The current user. Defaults to Depends(deps.User(auth_required=True)).\n\nRaises:\n    HTTPException: If the current user is not the owner of the comment.\n\nReturns:\n    Any: The deleted comment.", "operationId": "delete_comment_api_v1_findings__report_id__comments__comment_id__delete", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "report_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Report Id"}}, {"name": "comment_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Comment Id"}}, {"name": "hard", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "Hard"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Comment"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/categories/": {"get": {"tags": ["categories"], "summary": "List Categories", "description": "Retrieve categories.\n\nAccess:\n- Everyone\n\nParameters:\n- include_inactive: a boolean indicating whether to include inactive categories (default: None)\n- skip: an integer indicating how many categories to skip (default: 0)\n- limit: an integer indicating the maximum number of categories to retrieve (default: 100)\n\nReturns:\n- A list of category objects.", "operationId": "list_categories_api_v1_categories__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "include_inactive", "in": "query", "required": false, "schema": {"anyOf": [{"type": "boolean", "nullable": true}], "title": "Include Inactive"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/Category"}, "title": "Response List Categories Api V1 Categories  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["categories"], "summary": "Create Category", "description": "Create categories.\n\nAccess:\n- Admins\n\n:param item_in: Category object to be created\n:type item_in: schemas.CategoryCreate\n:return: The created category object\n:rtype: Any", "operationId": "create_category_api_v1_categories__post", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CategoryCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Category"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/categories/import": {"post": {"tags": ["categories"], "summary": "Import Categories", "description": "Import categories (VRT format)\n\nAccess:\n- Admins\n\n:param item_in: The category import data.\n:type item_in: schemas.CategoryImport\n:return: The imported categories.\n:rtype: Any", "operationId": "import_categories_api_v1_categories_import_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CategoryImport"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Category"}, "type": "array", "title": "Response Import Categories Api V1 Categories Import Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/v1/categories/{id}": {"patch": {"tags": ["categories"], "summary": "Update Category", "description": "Update a category.\n\nAccess:\n- Admins\n\n:param id: The ID of the category to update\n:type id: UUID\n:param item_in: The updated category data\n:type item_in: schemas.CategoryUpdate\n:return: The updated category\n:rtype: Any", "operationId": "update_category_api_v1_categories__id__patch", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CategoryBaseUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Category"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "get": {"tags": ["categories"], "summary": "Read Category", "description": "Retrieve a category by ID.\n\nArgs:\n    id (UUID): The ID of the category to retrieve.\n\nReturns:\n    Any: The retrieved category.\n\nRaises:\n    HTTPException: If the category with the specified ID does not exist.", "operationId": "read_category_api_v1_categories__id__get", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Category"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["categories"], "summary": "Delete Category", "description": "Delete a category.\n\nAccess:\n- Admins\n\n:param id: The ID of the category to delete\n:type id: UUID\n:return: The deleted category\n:rtype: Any", "operationId": "delete_category_api_v1_categories__id__delete", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Category"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/category_types/": {"get": {"tags": ["categories"], "summary": "Read Categories", "description": "Retrieve category types.\n\nReturns:\n    Any: A list of category types.", "operationId": "read_categories_api_v1_category_types__get", "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/CategoryType"}, "title": "Response Read Categories Api V1 Category Types  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/assignments/": {"get": {"tags": ["assignments"], "summary": "List Assignments", "description": "Retrieve assignments.\n\nArgs:\n    skip (int): Number of assignments to skip.\n    limit (int): Maximum number of assignments to retrieve.\n    include_inactive (bool): Whether to include inactive assignments.\n    acls (list): List of access control rules.\n\nReturns:\n    Any: List of assignments.", "operationId": "list_assignments_api_v1_assignments__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}, {"name": "include_inactive", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "Include Inactive"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/Assignment"}, "title": "Response List Assignments Api V1 Assignments  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"Assignment": {"properties": {"report_id": {"type": "string", "format": "uuid", "title": "Report Id"}, "user_id": {"type": "string", "format": "uuid", "title": "User Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "activated_at": {"anyOf": [{"type": "string", "format": "date-time", "nullable": true}], "title": "Activated At"}, "deactivated_at": {"anyOf": [{"type": "string", "format": "date-time", "nullable": true}], "title": "Deactivated At"}}, "type": "object", "required": ["report_id", "user_id", "id"], "title": "Assignment"}, "Body_create_user_open_api_v1_users_open_post": {"properties": {"password": {"type": "string", "title": "Password"}, "email": {"type": "string", "format": "email", "title": "Email"}, "username": {"type": "string", "title": "Username"}, "full_name": {"type": "string", "title": "Full Name"}}, "type": "object", "required": ["password", "email", "username"], "title": "Body_create_user_open_api_v1_users_open_post"}, "Body_login_access_token_api_v1_login_access_token_post": {"properties": {"grant_type": {"anyOf": [{"type": "string", "pattern": "password", "nullable": true}], "title": "Grant Type"}, "username": {"type": "string", "title": "Username"}, "password": {"type": "string", "title": "Password"}, "scope": {"type": "string", "title": "Scope", "default": ""}, "client_id": {"anyOf": [{"type": "string", "nullable": true}], "title": "Client Id"}, "client_secret": {"anyOf": [{"type": "string", "nullable": true}], "title": "Client Secret"}}, "type": "object", "required": ["username", "password"], "title": "Body_login_access_token_api_v1_login_access_token_post"}, "Body_update_user_me_api_v1_users_me_put": {"properties": {"password": {"type": "string", "title": "Password"}, "last_name": {"type": "string", "title": "Last Name"}, "email": {"type": "string", "format": "email", "title": "Email"}}, "type": "object", "title": "Body_update_user_me_api_v1_users_me_put"}, "BountyTable": {"properties": {"info": {"allOf": [{"$ref": "#/components/schemas/Range"}], "default": {"minimum": 50, "maximum": 100}}, "low": {"allOf": [{"$ref": "#/components/schemas/Range"}], "default": {"minimum": 100, "maximum": 200}}, "medium": {"allOf": [{"$ref": "#/components/schemas/Range"}], "default": {"minimum": 150, "maximum": 300}}, "high": {"allOf": [{"$ref": "#/components/schemas/Range"}], "default": {"minimum": 200, "maximum": 400}}, "critical": {"allOf": [{"$ref": "#/components/schemas/Range"}], "default": {"minimum": 250, "maximum": 500}}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "type": {"type": "string", "title": "Type", "default": "global"}}, "type": "object", "required": ["id"], "title": "BountyTable"}, "BountyTableCreate": {"properties": {"info": {"allOf": [{"$ref": "#/components/schemas/Range"}], "default": {"minimum": 50, "maximum": 100}}, "low": {"allOf": [{"$ref": "#/components/schemas/Range"}], "default": {"minimum": 100, "maximum": 200}}, "medium": {"allOf": [{"$ref": "#/components/schemas/Range"}], "default": {"minimum": 150, "maximum": 300}}, "high": {"allOf": [{"$ref": "#/components/schemas/Range"}], "default": {"minimum": 200, "maximum": 400}}, "critical": {"allOf": [{"$ref": "#/components/schemas/Range"}], "default": {"minimum": 250, "maximum": 500}}}, "type": "object", "title": "BountyTableCreate"}, "Category": {"properties": {"name": {"type": "string", "title": "Name"}, "category_type_id": {"type": "string", "format": "uuid", "title": "Category Type Id"}, "report_type": {"type": "string", "title": "Report Type"}, "description": {"anyOf": [{"type": "string", "nullable": true}], "title": "Description"}, "active": {"type": "boolean", "title": "Active", "default": false}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "id": {"type": "string", "format": "uuid", "title": "Id"}}, "type": "object", "required": ["name", "category_type_id", "report_type", "id"], "title": "Category"}, "CategoryBaseUpdate": {"properties": {"name": {"type": "string", "title": "Name"}, "category_type_id": {"type": "string", "format": "uuid", "title": "Category Type Id"}, "report_type": {"type": "string", "title": "Report Type"}, "description": {"anyOf": [{"type": "string", "nullable": true}], "title": "Description"}, "active": {"type": "boolean", "title": "Active"}, "id": {"type": "string", "format": "uuid", "title": "Id"}}, "type": "object", "title": "CategoryBaseUpdate"}, "CategoryCreate": {"properties": {"name": {"type": "string", "title": "Name"}, "category_type_id": {"type": "string", "format": "uuid", "title": "Category Type Id"}, "report_type": {"type": "string", "title": "Report Type"}, "description": {"anyOf": [{"type": "string", "nullable": true}], "title": "Description"}, "active": {"type": "boolean", "title": "Active", "default": false}}, "type": "object", "required": ["name", "category_type_id", "report_type"], "title": "CategoryCreate"}, "CategoryImport": {"properties": {"category_type": {"type": "string", "title": "Category Type", "default": "BUGCROWD_WEB"}, "data": {"type": "object", "title": "Data"}}, "type": "object", "required": ["data"], "title": "CategoryImport"}, "CategorySummary": {"properties": {"name": {"type": "string", "title": "Name"}, "category_type_id": {"type": "string", "format": "uuid", "title": "Category Type Id"}, "report_type": {"type": "string", "title": "Report Type"}, "description": {"anyOf": [{"type": "string", "nullable": true}], "title": "Description"}, "active": {"type": "boolean", "title": "Active", "default": false}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "id": {"type": "string", "format": "uuid", "title": "Id"}}, "type": "object", "required": ["name", "category_type_id", "report_type", "id"], "title": "CategorySummary"}, "CategoryType": {"properties": {"code": {"type": "string", "title": "Code"}, "type": {"type": "string", "title": "Type"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "id": {"type": "string", "format": "uuid", "title": "Id"}}, "type": "object", "required": ["code", "type", "id"], "title": "CategoryType"}, "Comment": {"properties": {"msg": {"type": "string", "title": "Msg"}, "flags": {"items": {"type": "string"}, "type": "array", "title": "Flags", "default": []}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "sender_id": {"type": "string", "format": "uuid", "title": "Sender Id"}, "finding_id": {"type": "string", "format": "uuid", "title": "Finding Id"}}, "type": "object", "required": ["msg", "id", "sender_id", "finding_id"], "title": "Comment"}, "CommentCreate": {"properties": {"msg": {"type": "string", "title": "Msg"}, "flags": {"items": {"type": "string"}, "type": "array", "title": "Flags", "default": []}}, "type": "object", "required": ["msg"], "title": "CommentCreate"}, "FindingAcceptAction": {"properties": {"action": {"enum": ["accept"], "title": "Action"}}, "type": "object", "required": ["action"], "title": "FindingAcceptAction"}, "FindingAssignUserAction": {"properties": {"action": {"enum": ["assign"], "title": "Action"}, "user_id": {"type": "string", "format": "uuid", "title": "User Id"}}, "type": "object", "required": ["action", "user_id"], "title": "FindingAssignUserAction"}, "FindingCreate": {"properties": {"program_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Program Id"}, "user_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "User Id"}, "title": {"type": "string", "title": "Title"}, "description": {"anyOf": [{"type": "string", "nullable": true}], "title": "Description"}, "slug": {"anyOf": [{"type": "string", "nullable": true}], "title": "Slug"}, "severity": {"anyOf": [{"$ref": "#/components/schemas/FindingSeverity", "nullable": true}, {"type": "string", "nullable": true}], "title": "Severity"}, "category_id": {"type": "string", "format": "uuid", "title": "Category Id"}, "url": {"anyOf": [{"type": "string", "nullable": true}], "title": "Url"}, "draft": {"type": "boolean", "title": "Draft", "default": false}}, "type": "object", "required": ["title", "category_id"], "title": "FindingCreate"}, "FindingDetails": {"properties": {"created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "title": {"type": "string", "maxLength": 50, "title": "Title"}, "description": {"anyOf": [{"type": "string", "maxLength": 255, "nullable": true}], "title": "Description", "nullable": true}, "url": {"anyOf": [{"type": "string", "nullable": true}], "title": "Url", "nullable": true}, "status": {"$ref": "#/components/schemas/FindingStatus"}, "rd_email": {"anyOf": [{"type": "string", "maxLength": 255, "nullable": true}], "title": "Rd Email", "nullable": true}, "rejection_reason": {"anyOf": [{"$ref": "#/components/schemas/FindingRejectReason", "nullable": true}]}, "severity": {"anyOf": [{"$ref": "#/components/schemas/FindingSeverity", "nullable": true}]}, "cvss_vector": {"anyOf": [{"type": "string", "nullable": true}], "title": "Cvss Vector"}, "cvss_score": {"anyOf": [{"type": "string", "nullable": true}], "title": "Cvss Score", "nullable": true}, "category": {"$ref": "#/components/schemas/CategorySummary"}, "program": {"anyOf": [{"$ref": "#/components/schemas/ProgramSummary", "nullable": true}]}, "user": {"anyOf": [{"$ref": "#/components/schemas/UserSummary", "nullable": true}]}, "user_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "User Id"}, "program_id": {"type": "string", "format": "uuid", "title": "Program Id"}, "category_id": {"type": "string", "format": "uuid", "title": "Category Id"}}, "additionalProperties": false, "type": "object", "required": ["created_at", "updated_at", "id", "title", "description", "url", "status", "rd_email", "rejection_reason", "severity", "cvss_vector", "cvss_score", "category", "program", "user", "user_id", "program_id", "category_id"], "title": "FindingIn"}, "FindingInDBBaseUpdate": {"properties": {"created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "title": {"type": "string", "title": "Title"}, "description": {"anyOf": [{"type": "string", "nullable": true}], "title": "Description"}, "url": {"anyOf": [{"type": "string", "nullable": true}], "title": "Url"}, "status": {"allOf": [{"$ref": "#/components/schemas/FindingStatus"}]}, "rd_email": {"anyOf": [{"type": "string", "nullable": true}], "title": "Rd Email"}, "rejection_reason": {"anyOf": [{"type": "integer", "nullable": true}], "title": "Rejection Reason"}, "severity": {"anyOf": [{"$ref": "#/components/schemas/FindingSeverity", "nullable": true}]}, "cvss_vector": {"anyOf": [{"type": "string", "nullable": true}], "title": "Cvss Vector"}, "cvss_score": {"anyOf": [{"type": "number", "nullable": true}, {"type": "string", "nullable": true}], "title": "Cvss Score"}, "category": {"allOf": [{"$ref": "#/components/schemas/bpjiul"}]}, "program": {"anyOf": [{"$ref": "#/components/schemas/kgydp3", "nullable": true}]}, "user": {"anyOf": [{"$ref": "#/components/schemas/tortoise__contrib__pydantic__creator__zc_core_api__models__user__User__leaf", "nullable": true}]}, "user_id": {"type": "string", "format": "uuid", "title": "User Id"}}, "type": "object", "title": "FindingInDBBaseUpdate"}, "FindingMarkFalsePositiveAction": {"properties": {"action": {"enum": ["mark_false_positive"], "title": "Action"}}, "type": "object", "required": ["action"], "title": "FindingMarkFalsePositiveAction"}, "FindingMarkWorkInProgressAction": {"properties": {"action": {"enum": ["mark_work_in_progress"], "title": "Action"}}, "type": "object", "required": ["action"], "title": "FindingMarkWorkInProgressAction"}, "FindingRejectAction": {"properties": {"action": {"enum": ["reject"], "title": "Action"}, "reason": {"type": "string", "title": "Reason"}}, "type": "object", "required": ["action", "reason"], "title": "FindingRejectAction"}, "FindingRejectReason": {"type": "integer", "enum": [0, 1, 2, 3, 9], "title": "FindingRejectReason"}, "FindingResolvedAction": {"properties": {"action": {"enum": ["mark_resolved"], "title": "Action"}}, "type": "object", "required": ["action"], "title": "FindingResolvedAction"}, "FindingRetestRequestedAction": {"properties": {"action": {"enum": ["mark_retest_requested"], "title": "Action"}}, "type": "object", "required": ["action"], "title": "FindingRetestRequestedAction"}, "FindingSeverity": {"type": "integer", "enum": [1, 2, 3, 4, 5], "title": "FindingSeverity"}, "FindingStatus": {"type": "integer", "enum": [0, 1, 2, 3, 8, 9, 12, 13, 15, 99], "title": "FindingStatus"}, "FindingSubmitUserAction": {"properties": {"action": {"enum": ["submit"], "title": "Action"}}, "type": "object", "required": ["action"], "title": "FindingSubmitUserAction"}, "FindingSummary": {"properties": {"program_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Program Id"}, "user_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "User Id"}, "title": {"type": "string", "title": "Title"}, "description": {"anyOf": [{"type": "string", "nullable": true}], "title": "Description"}, "slug": {"anyOf": [{"type": "string", "nullable": true}], "title": "Slug"}, "severity": {"anyOf": [{"$ref": "#/components/schemas/FindingSeverity", "nullable": true}, {"type": "string", "nullable": true}], "title": "Severity"}, "category_id": {"type": "string", "format": "uuid", "title": "Category Id"}, "url": {"anyOf": [{"type": "string", "nullable": true}], "title": "Url"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "status": {"$ref": "#/components/schemas/FindingStatus"}, "user": {"anyOf": [{"$ref": "#/components/schemas/UserSummary", "nullable": true}]}}, "type": "object", "required": ["title", "category_id", "id", "status", "user"], "title": "FindingSummary"}, "FindingUnAssignUserAction": {"properties": {"action": {"enum": ["unassign"], "title": "Action"}, "user_id": {"type": "string", "format": "uuid", "title": "User Id"}, "report_id": {"type": "string", "format": "uuid", "title": "Report Id"}}, "type": "object", "required": ["action", "user_id", "report_id"], "title": "FindingUnAssignUserAction"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "InvitationCreate": {"properties": {"recipient": {"type": "string", "title": "Recipient"}, "message": {"anyOf": [{"type": "string", "nullable": true}], "title": "Message"}, "report_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Report Id"}, "roles": {"anyOf": [{"items": {"$ref": "#/components/schemas/TeamRoleType"}, "type": "array", "uniqueItems": true, "nullable": true}], "title": "Roles"}, "sender_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Sender Id"}, "type": {"anyOf": [{"type": "string", "nullable": true}], "title": "Type"}}, "type": "object", "required": ["recipient"], "title": "InvitationCreate"}, "InvitationDetails": {"properties": {"created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "recipient": {"type": "string", "maxLength": 255, "title": "Recipient"}, "message": {"anyOf": [{"type": "string", "nullable": true}], "title": "Message", "nullable": true}, "accepted_at": {"anyOf": [{"type": "string", "format": "date-time", "nullable": true}], "title": "Accepted At", "nullable": true}, "type": {"anyOf": [{"type": "string", "maxLength": 255, "nullable": true}], "title": "Type", "default": "ResearcherInvitation"}, "privileged": {"anyOf": [{"type": "boolean", "nullable": true}], "title": "Privileged", "default": false}, "researcher_trial": {"anyOf": [{"type": "boolean", "nullable": true}], "title": "Researcher Trial", "default": false}, "report_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Report Id", "nullable": true}, "program_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Program Id", "nullable": true}, "sender_id": {"type": "string", "format": "uuid", "title": "Sender Id"}}, "additionalProperties": false, "type": "object", "required": ["created_at", "updated_at", "id", "recipient", "message", "accepted_at", "report_id", "program_id", "sender_id"], "title": "InvitationIn"}, "InvitationSummary": {"properties": {"recipient": {"type": "string", "title": "Recipient"}, "message": {"anyOf": [{"type": "string", "nullable": true}], "title": "Message"}, "report_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Report Id"}, "roles": {"anyOf": [{"items": {"$ref": "#/components/schemas/TeamRoleType"}, "type": "array", "uniqueItems": true, "nullable": true}], "title": "Roles"}, "sender_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Sender Id"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "type": {"type": "string", "title": "Type"}}, "type": "object", "required": ["recipient", "id", "type"], "title": "InvitationSummary"}, "NDACreate": {"properties": {"body_en": {"type": "string", "title": "Body En"}, "program_id": {"type": "string", "format": "uuid", "title": "Program Id"}}, "type": "object", "required": ["body_en", "program_id"], "title": "NDACreate"}, "NDADetails": {"properties": {"created_at": {"type": "string", "format": "date-time", "title": "Created At", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At", "readOnly": true}, "id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Id"}, "body_en": {"type": "string", "title": "Body En"}, "program_id": {"type": "string", "format": "uuid", "title": "Program Id"}}, "additionalProperties": false, "type": "object", "required": ["created_at", "updated_at", "id", "body_en", "program_id"], "title": "NDAIn"}, "NDAUpdate": {"properties": {"body_en": {"type": "string", "title": "Body En"}, "id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Id"}}, "type": "object", "required": ["body_en"], "title": "NDAUpdate"}, "OrganizationCreate": {"properties": {"slug": {"type": "string", "title": "Slug"}, "name": {"type": "string", "title": "Name"}, "website": {"anyOf": [{"type": "string", "nullable": true}], "title": "Website"}, "logo": {"anyOf": [{"type": "string", "nullable": true}], "title": "Logo"}}, "type": "object", "required": ["slug", "name"], "title": "OrganizationCreate"}, "OrganizationCreateArgoCallback": {"properties": {"one_time_secret": {"type": "string", "title": "One Time Secret"}, "hostname": {"type": "string", "title": "Hostname"}}, "type": "object", "required": ["one_time_secret", "hostname"], "title": "OrganizationCreateArgoCallback"}, "OrganizationDetails": {"properties": {"created_at": {"type": "string", "format": "date-time", "title": "Created At", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At", "readOnly": true}, "id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Id"}, "name": {"type": "string", "maxLength": 255, "title": "Name"}, "website": {"anyOf": [{"type": "string", "maxLength": 255, "nullable": true}], "title": "Website", "nullable": true}, "slug": {"anyOf": [{"type": "string", "maxLength": 255, "nullable": true}], "title": "Slug", "nullable": true}, "logo": {"anyOf": [{"type": "string", "maxLength": 255, "nullable": true}], "title": "Logo", "nullable": true}, "bounty_table": {"anyOf": [{"$ref": "#/components/schemas/hoy34r", "nullable": true}], "title": "Bounty Table", "nullable": true}, "memberships": {"items": {"$ref": "#/components/schemas/OrganizationMemberUserSummary"}, "type": "array", "title": "Memberships"}}, "additionalProperties": false, "type": "object", "required": ["created_at", "updated_at", "id", "name", "website", "slug", "logo", "bounty_table", "memberships"], "title": "OrganizationIn"}, "OrganizationMemberCreate": {"properties": {"organization_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Organization Id"}, "user_id": {"type": "string", "format": "uuid", "title": "User Id"}, "admin": {"type": "boolean", "title": "Admin", "default": false}, "budget_holder": {"type": "boolean", "title": "Budget Holder", "default": false}}, "additionalProperties": false, "type": "object", "required": ["user_id"], "title": "OrganizationMemberCreate"}, "OrganizationMemberSummary": {"properties": {"user_id": {"type": "string", "format": "uuid", "title": "User Id"}, "owner": {"type": "boolean", "title": "Owner"}, "budget_holder": {"type": "boolean", "title": "Budget Holder"}}, "type": "object", "required": ["user_id", "owner", "budget_holder"], "title": "OrganizationMemberSummary"}, "OrganizationMemberUpdate": {"properties": {"id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Id"}, "admin": {"anyOf": [{"type": "boolean", "nullable": true}], "title": "Admin"}, "budget_holder": {"anyOf": [{"type": "boolean", "nullable": true}], "title": "Budget Holder"}}, "type": "object", "title": "OrganizationMemberUpdate"}, "OrganizationMemberUserSummary": {"properties": {"user_id": {"type": "string", "format": "uuid", "title": "User Id"}, "owner": {"type": "boolean", "title": "Owner"}, "budget_holder": {"type": "boolean", "title": "Budget Holder"}}, "type": "object", "required": ["user_id", "owner", "budget_holder"], "title": "OrganizationMemberUserSummary"}, "OrganizationSummary": {"properties": {"name": {"type": "string", "title": "Name"}, "website": {"anyOf": [{"type": "string", "nullable": true}], "title": "Website"}, "logo": {"anyOf": [{"type": "string", "nullable": true}], "title": "Logo"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "id": {"type": "string", "format": "uuid", "title": "Id"}}, "type": "object", "required": ["name", "created_at", "updated_at", "id"], "title": "OrganizationSummary"}, "OrganizationUpdate": {"properties": {"slug": {"type": "string", "title": "Slug"}, "name": {"type": "string", "title": "Name"}, "website": {"anyOf": [{"type": "string", "nullable": true}], "title": "Website"}, "logo": {"anyOf": [{"type": "string", "nullable": true}], "title": "Logo"}, "id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Id"}}, "type": "object", "required": ["slug", "name"], "title": "OrganizationUpdate"}, "ParticipationUpdate": {"properties": {"user_id": {"type": "string", "format": "uuid", "title": "User Id"}, "available": {"anyOf": [{"type": "boolean", "nullable": true}], "title": "Available", "default": true}, "program_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Program Id"}, "researchers_team_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Researchers Team Id"}}, "type": "object", "required": ["user_id"], "title": "ParticipationUpdate"}, "ProgramCreate": {"properties": {"admin_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Admin Id"}, "name": {"type": "string", "title": "Name"}, "description": {"anyOf": [{"type": "string", "nullable": true}], "title": "Description"}, "slug": {"anyOf": [{"type": "string", "nullable": true}], "title": "Slug"}, "type": {"allOf": [{"$ref": "#/components/schemas/ProgramType"}], "default": "cvd"}, "organization_id": {"type": "string", "format": "uuid", "title": "Organization Id"}}, "type": "object", "required": ["name", "organization_id"], "title": "ProgramCreate"}, "ProgramDetails": {"properties": {"logo_content_type": {"anyOf": [{"type": "string", "maxLength": 255, "nullable": true}], "title": "Logo Content Type", "nullable": true}, "logo_file_size": {"anyOf": [{"type": "integer", "maximum": 2147483647.0, "minimum": -2147483648.0, "nullable": true}], "title": "Logo File Size", "nullable": true}, "logo_updated_at": {"anyOf": [{"type": "string", "format": "date-time", "nullable": true}], "title": "Logo Updated At", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "title": "Created At", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At", "readOnly": true}, "name": {"type": "string", "maxLength": 255, "title": "Name"}, "description": {"anyOf": [{"type": "string", "nullable": true}], "title": "Description", "nullable": true}, "slug": {"anyOf": [{"type": "string", "nullable": true}], "title": "Slug"}, "budget": {"anyOf": [{"type": "integer", "maximum": 2147483647.0, "minimum": -2147483648.0, "nullable": true}], "title": "Budget", "default": 0, "nullable": true}, "accepted_at": {"anyOf": [{"type": "string", "format": "date-time", "nullable": true}], "title": "Accepted At", "nullable": true}, "submitted_at": {"anyOf": [{"type": "string", "format": "date-time", "nullable": true}], "title": "Submitted At", "nullable": true}, "allows_responsible_disclosure": {"anyOf": [{"type": "boolean", "nullable": true}], "title": "Allows Responsible Disclosure", "default": false}, "rejected_at": {"anyOf": [{"type": "string", "format": "date-time", "nullable": true}], "title": "Rejected At", "nullable": true}, "start_date": {"anyOf": [{"type": "string", "format": "date", "nullable": true}], "title": "Start Date", "nullable": true}, "finish_date": {"anyOf": [{"type": "string", "format": "date", "nullable": true}], "title": "Finish Date", "nullable": true}, "archived_at": {"anyOf": [{"type": "string", "format": "date-time", "nullable": true}], "title": "Archived At", "nullable": true}, "type": {"anyOf": [{"type": "string", "maxLength": 64, "nullable": true}], "title": "Type", "description": "zerocopter_core_rails: zerocopter-core-rails<br/>dummy_program: dummy_program<br/>cvd: cvd<br/>bugbounty: bugbounty<br/>dht: dht<br/>ResponsibleDisclosurePolicy: ResponsibleDisclosurePolicy<br/>program: Program<br/>schedule_rule: ScheduleRule", "default": "cvd", "nullable": true}, "public": {"anyOf": [{"type": "boolean", "nullable": true}], "title": "Public", "default": false}, "organization_id": {"type": "string", "format": "uuid", "title": "Organization Id"}, "bounty_table_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Bounty Table Id", "nullable": true}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "state": {"$ref": "#/components/schemas/ProgramStatus"}}, "additionalProperties": false, "type": "object", "required": ["logo_content_type", "logo_file_size", "logo_updated_at", "created_at", "updated_at", "name", "description", "slug", "accepted_at", "submitted_at", "rejected_at", "start_date", "finish_date", "archived_at", "organization_id", "bounty_table_id", "id", "state"], "title": "ProgramIn"}, "ProgramStatus": {"type": "string", "enum": ["draft", "pending", "active", "expired", "scheduled", "rejected", "archived"], "title": "ProgramStatus"}, "ProgramStatusUpdate": {"properties": {"action": {"$ref": "#/components/schemas/ProgramStatusUpdateEnum"}}, "type": "object", "required": ["action"], "title": "ProgramStatusUpdate"}, "ProgramStatusUpdateEnum": {"type": "string", "enum": ["submit", "approve", "reject", "archive", "activate", "deactivate"], "title": "ProgramStatusUpdateEnum"}, "ProgramSummary": {"properties": {"admin_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Admin Id"}, "name": {"type": "string", "title": "Name"}, "description": {"anyOf": [{"type": "string", "nullable": true}], "title": "Description"}, "slug": {"anyOf": [{"type": "string", "nullable": true}], "title": "Slug"}, "type": {"allOf": [{"$ref": "#/components/schemas/ProgramType"}], "default": "cvd"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "organization_id": {"type": "string", "format": "uuid", "title": "Organization Id"}, "archived_at": {"anyOf": [{"type": "string", "format": "date-time", "nullable": true}], "title": "Archived At"}, "accepted_at": {"anyOf": [{"type": "string", "format": "date-time", "nullable": true}], "title": "Accepted At"}, "rejected_at": {"anyOf": [{"type": "string", "format": "date-time", "nullable": true}], "title": "Rejected At"}}, "type": "object", "required": ["name", "id", "organization_id"], "title": "ProgramSummary"}, "ProgramType": {"type": "string", "enum": ["zerocopter-core-rails", "dummy_program", "cvd", "bugbounty", "dht", "ResponsibleDisclosurePolicy", "Program", "ScheduleRule"], "title": "ProgramType"}, "ProgramUpdate": {"properties": {"admin_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Admin Id"}, "name": {"type": "string", "title": "Name"}, "description": {"anyOf": [{"type": "string", "nullable": true}], "title": "Description"}, "slug": {"anyOf": [{"type": "string", "nullable": true}], "title": "Slug"}, "type": {"allOf": [{"$ref": "#/components/schemas/ProgramType"}], "default": "cvd"}, "id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Id"}, "budget": {"anyOf": [{"type": "integer", "nullable": true}], "title": "Budget"}, "allows_responsible_disclosure": {"anyOf": [{"type": "boolean", "nullable": true}], "title": "Allows Responsible Disclosure"}, "start_date": {"anyOf": [{"type": "string", "format": "date", "nullable": true}], "title": "Start Date"}, "finish_date": {"anyOf": [{"type": "string", "format": "date", "nullable": true}], "title": "Finish Date"}, "public": {"anyOf": [{"type": "boolean", "nullable": true}], "title": "Public"}}, "type": "object", "required": ["name"], "title": "ProgramUpdate"}, "Range": {"properties": {"minimum": {"type": "integer", "title": "Minimum"}, "maximum": {"type": "integer", "title": "Maximum"}}, "type": "object", "required": ["minimum", "maximum"], "title": "Range"}, "TeamCreate": {"properties": {"name": {"type": "string", "title": "Name"}, "title": {"anyOf": [{"type": "string", "nullable": true}], "title": "Title"}, "public": {"type": "boolean", "title": "Public", "default": false}, "organization_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Organization Id"}}, "type": "object", "required": ["name"], "title": "TeamCreate"}, "TeamDetails": {"properties": {"created_at": {"type": "string", "format": "date-time", "title": "Created At", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At", "readOnly": true}, "id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Id"}, "name": {"anyOf": [{"type": "string", "maxLength": 255, "nullable": true}], "title": "Name", "nullable": true}, "public": {"anyOf": [{"type": "boolean", "nullable": true}], "title": "Public", "default": false}, "organization_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Organization Id", "nullable": true}}, "additionalProperties": false, "type": "object", "required": ["created_at", "updated_at", "id", "name", "organization_id"], "title": "TeamIn"}, "TeamInDBUpdate": {"properties": {"created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Id"}, "name": {"anyOf": [{"type": "string", "nullable": true}], "title": "Name"}, "public": {"anyOf": [{"type": "boolean", "nullable": true}], "title": "Public"}, "organization_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Organization Id"}}, "type": "object", "title": "TeamInDBUpdate"}, "TeamMembershipUpdate": {"properties": {"user_id": {"type": "string", "format": "uuid", "title": "User Id"}, "roles": {"anyOf": [{"items": {"$ref": "#/components/schemas/TeamRoleType"}, "type": "array", "uniqueItems": true, "nullable": true}], "title": "Roles"}}, "type": "object", "required": ["user_id"], "title": "TeamMembershipUpdate"}, "TeamRoleType": {"anyOf": [{"type": "string", "enum": ["admin", "budget_holder", "consultant"], "nullable": true}], "title": "TeamRoleType"}, "TeamSummary": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "name": {"anyOf": [{"type": "string", "nullable": true}], "title": "Name"}}, "type": "object", "required": ["id"], "title": "TeamSummary"}, "TemplateCreate": {"properties": {"content": {"type": "string", "title": "Content"}, "title": {"type": "string", "title": "Title"}, "apply_to": {"anyOf": [{"type": "integer", "nullable": true}], "title": "Apply To"}, "author_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Author Id"}}, "type": "object", "required": ["content", "title"], "title": "TemplateCreate"}, "TemplateDetails": {"properties": {"created_at": {"type": "string", "format": "date-time", "title": "Created At", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At", "readOnly": true}, "content": {"type": "string", "title": "Content"}, "apply_to": {"anyOf": [{"type": "integer", "maximum": 2147483647.0, "minimum": -2147483648.0, "nullable": true}], "title": "Apply To", "default": 0}, "group_name": {"anyOf": [{"type": "string", "maxLength": 255, "nullable": true}], "title": "Group Name", "nullable": true}, "templateable_type": {"anyOf": [{"type": "string", "maxLength": 255, "nullable": true}], "title": "Templateable Type", "nullable": true}, "templateable_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Templateable Id", "nullable": true}, "title": {"type": "string", "maxLength": 255, "title": "Title"}, "author_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Author Id", "nullable": true}, "id": {"type": "string", "format": "uuid", "title": "Id"}}, "additionalProperties": false, "type": "object", "required": ["created_at", "updated_at", "content", "group_name", "templateable_type", "templateable_id", "title", "author_id", "id"], "title": "TemplateIn"}, "TemplateSummary": {"properties": {"content": {"type": "string", "title": "Content"}, "title": {"type": "string", "title": "Title"}, "apply_to": {"anyOf": [{"type": "integer", "nullable": true}], "title": "Apply To"}, "author_id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Author Id"}, "id": {"type": "string", "format": "uuid", "title": "Id"}}, "type": "object", "required": ["content", "title", "id"], "title": "TemplateSummary"}, "Token": {"properties": {"access_token": {"type": "string", "title": "Access Token"}, "token_type": {"type": "string", "title": "Token Type"}}, "type": "object", "required": ["access_token", "token_type"], "title": "Token"}, "UserCreate": {"properties": {"email": {"anyOf": [{"type": "string", "format": "email", "nullable": true}], "title": "Email"}, "username": {"anyOf": [{"type": "string", "nullable": true}], "title": "Username"}, "onboarded": {"type": "boolean", "title": "Onboarded", "default": true}, "first_name": {"anyOf": [{"type": "string", "nullable": true}], "title": "First Name"}, "last_name": {"anyOf": [{"type": "string", "nullable": true}], "title": "Last Name"}, "password": {"type": "string", "title": "Password"}}, "type": "object", "required": ["password"], "title": "UserCreate"}, "UserDetails": {"properties": {"created_at": {"type": "string", "format": "date-time", "title": "Created At", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At", "readOnly": true}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "first_name": {"anyOf": [{"type": "string", "maxLength": 255, "nullable": true}], "title": "First Name", "nullable": true}, "last_name": {"anyOf": [{"type": "string", "maxLength": 255, "nullable": true}], "title": "Last Name", "nullable": true}, "email": {"type": "string", "maxLength": 255, "title": "Email"}, "username": {"type": "string", "maxLength": 255, "title": "Username"}, "onboarded": {"anyOf": [{"type": "boolean", "nullable": true}], "title": "Onboarded", "default": false, "nullable": true}, "platform_member": {"type": "boolean", "title": "Platform Member", "default": false}, "is_hacker": {"type": "boolean", "title": "Is Hacker", "default": false}}, "additionalProperties": false, "type": "object", "required": ["created_at", "updated_at", "id", "first_name", "last_name", "email", "username"], "title": "UserIn"}, "UserSummary": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "username": {"type": "string", "title": "Username"}, "email": {"type": "string", "title": "Email"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}}, "type": "object", "required": ["id", "username", "email", "created_at", "updated_at"], "title": "UserSummary"}, "UserUpdate": {"properties": {"email": {"anyOf": [{"type": "string", "format": "email", "nullable": true}], "title": "Email"}, "username": {"anyOf": [{"type": "string", "nullable": true}], "title": "Username"}, "onboarded": {"type": "boolean", "title": "Onboarded", "default": true}, "first_name": {"anyOf": [{"type": "string", "nullable": true}], "title": "First Name"}, "last_name": {"anyOf": [{"type": "string", "nullable": true}], "title": "Last Name"}, "id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Id"}, "password": {"anyOf": [{"type": "string", "nullable": true}], "title": "Password"}}, "type": "object", "title": "UserUpdate"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}, "bpjiul": {"properties": {"created_at": {"type": "string", "format": "date-time", "title": "Created At", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At", "readOnly": true}, "id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Id"}, "name": {"anyOf": [{"type": "string", "maxLength": 255, "nullable": true}], "title": "Name", "nullable": true}, "report_type": {"anyOf": [{"type": "string", "maxLength": 255, "nullable": true}], "title": "Report Type", "nullable": true}, "active": {"anyOf": [{"type": "boolean", "nullable": true}], "title": "Active", "default": false, "nullable": true}, "description": {"anyOf": [{"type": "string", "nullable": true}], "title": "Description", "nullable": true}, "severity": {"anyOf": [{"type": "integer", "maximum": 2147483647.0, "minimum": -2147483648.0, "nullable": true}], "title": "Severity", "default": 3, "nullable": true}, "category_type": {"allOf": [{"$ref": "#/components/schemas/tortoise__contrib__pydantic__creator__zc_core_api__models__category__CategoryType__leaf"}], "title": "Category Type"}}, "additionalProperties": false, "type": "object", "required": ["created_at", "updated_at", "id", "name", "report_type", "description", "category_type"], "title": "Category"}, "hoy34r": {"properties": {"created_at": {"type": "string", "format": "date-time", "title": "Created At", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At", "readOnly": true}, "id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Id"}, "info": {"type": "string", "maxLength": 255, "title": "Info"}, "low": {"type": "string", "maxLength": 255, "title": "Low"}, "medium": {"type": "string", "maxLength": 255, "title": "Medium"}, "high": {"type": "string", "maxLength": 255, "title": "High"}, "critical": {"type": "string", "maxLength": 255, "title": "Critical"}, "programs": {"anyOf": [{"$ref": "#/components/schemas/leaf-Output", "nullable": true}], "title": "Programs", "nullable": true}}, "additionalProperties": false, "type": "object", "required": ["created_at", "updated_at", "id", "info", "low", "medium", "high", "critical", "programs"], "title": "BountyTable"}, "kgydp3": {"properties": {"logo_content_type": {"anyOf": [{"type": "string", "maxLength": 255, "nullable": true}], "title": "Logo Content Type", "nullable": true}, "logo_file_size": {"anyOf": [{"type": "integer", "maximum": 2147483647.0, "minimum": -2147483648.0, "nullable": true}], "title": "Logo File Size", "nullable": true}, "logo_updated_at": {"anyOf": [{"type": "string", "format": "date-time", "nullable": true}], "title": "Logo Updated At", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "title": "Created At", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At", "readOnly": true}, "id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Id"}, "name": {"type": "string", "maxLength": 255, "title": "Name"}, "description": {"anyOf": [{"type": "string", "nullable": true}], "title": "Description", "nullable": true}, "slug": {"anyOf": [{"type": "string", "maxLength": 255, "nullable": true}], "title": "Slug", "nullable": true}, "budget": {"anyOf": [{"type": "integer", "maximum": 2147483647.0, "minimum": -2147483648.0, "nullable": true}], "title": "Budget", "default": 0, "nullable": true}, "accepted_at": {"anyOf": [{"type": "string", "format": "date-time", "nullable": true}], "title": "Accepted At", "nullable": true}, "submitted_at": {"anyOf": [{"type": "string", "format": "date-time", "nullable": true}], "title": "Submitted At", "nullable": true}, "allows_responsible_disclosure": {"anyOf": [{"type": "boolean", "nullable": true}], "title": "Allows Responsible Disclosure", "default": false}, "rejected_at": {"anyOf": [{"type": "string", "format": "date-time", "nullable": true}], "title": "Rejected At", "nullable": true}, "start_date": {"anyOf": [{"type": "string", "format": "date", "nullable": true}], "title": "Start Date", "nullable": true}, "finish_date": {"anyOf": [{"type": "string", "format": "date", "nullable": true}], "title": "Finish Date", "nullable": true}, "archived_at": {"anyOf": [{"type": "string", "format": "date-time", "nullable": true}], "title": "Archived At", "nullable": true}, "type": {"anyOf": [{"type": "string", "maxLength": 64, "nullable": true}], "title": "Type", "description": "zerocopter_core_rails: zerocopter-core-rails<br/>dummy_program: dummy_program<br/>cvd: cvd<br/>bugbounty: bugbounty<br/>dht: dht<br/>ResponsibleDisclosurePolicy: ResponsibleDisclosurePolicy<br/>program: Program<br/>schedule_rule: ScheduleRule", "default": "cvd", "nullable": true}, "public": {"anyOf": [{"type": "boolean", "nullable": true}], "title": "Public", "default": false}, "project_id": {"type": "string", "format": "uuid", "title": "Project Id"}, "bounty_table": {"anyOf": [{"$ref": "#/components/schemas/l632wy", "nullable": true}], "title": "Bounty Table", "nullable": true}, "organization_id": {"type": "string", "format": "uuid", "title": "Organization Id"}}, "additionalProperties": false, "type": "object", "required": ["logo_content_type", "logo_file_size", "logo_updated_at", "created_at", "updated_at", "id", "name", "description", "slug", "accepted_at", "submitted_at", "rejected_at", "start_date", "finish_date", "archived_at", "project_id", "bounty_table", "organization_id"], "title": "Program"}, "l632wy": {"properties": {"created_at": {"type": "string", "format": "date-time", "title": "Created At", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At", "readOnly": true}, "id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Id"}, "info": {"type": "string", "maxLength": 255, "title": "Info"}, "low": {"type": "string", "maxLength": 255, "title": "Low"}, "medium": {"type": "string", "maxLength": 255, "title": "Medium"}, "high": {"type": "string", "maxLength": 255, "title": "High"}, "critical": {"type": "string", "maxLength": 255, "title": "Critical"}, "organizations": {"anyOf": [{"$ref": "#/components/schemas/tortoise__contrib__pydantic__creator__zc_core_api__models__organization__Organization__leaf", "nullable": true}], "title": "Organizations", "nullable": true}}, "additionalProperties": false, "type": "object", "required": ["created_at", "updated_at", "id", "info", "low", "medium", "high", "critical", "organizations"], "title": "BountyTable"}, "leaf-Output": {"properties": {"logo_content_type": {"anyOf": [{"type": "string", "maxLength": 255, "nullable": true}], "title": "Logo Content Type", "nullable": true}, "logo_file_size": {"anyOf": [{"type": "integer", "maximum": 2147483647.0, "minimum": -2147483648.0, "nullable": true}], "title": "Logo File Size", "nullable": true}, "logo_updated_at": {"anyOf": [{"type": "string", "format": "date-time", "nullable": true}], "title": "Logo Updated At", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "title": "Created At", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At", "readOnly": true}, "id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Id"}, "name": {"type": "string", "maxLength": 255, "title": "Name"}, "description": {"anyOf": [{"type": "string", "nullable": true}], "title": "Description", "nullable": true}, "slug": {"anyOf": [{"type": "string", "maxLength": 255, "nullable": true}], "title": "Slug", "nullable": true}, "budget": {"anyOf": [{"type": "integer", "maximum": 2147483647.0, "minimum": -2147483648.0, "nullable": true}], "title": "Budget", "default": 0, "nullable": true}, "accepted_at": {"anyOf": [{"type": "string", "format": "date-time", "nullable": true}], "title": "Accepted At", "nullable": true}, "submitted_at": {"anyOf": [{"type": "string", "format": "date-time", "nullable": true}], "title": "Submitted At", "nullable": true}, "allows_responsible_disclosure": {"anyOf": [{"type": "boolean", "nullable": true}], "title": "Allows Responsible Disclosure", "default": false}, "rejected_at": {"anyOf": [{"type": "string", "format": "date-time", "nullable": true}], "title": "Rejected At", "nullable": true}, "start_date": {"anyOf": [{"type": "string", "format": "date", "nullable": true}], "title": "Start Date", "nullable": true}, "finish_date": {"anyOf": [{"type": "string", "format": "date", "nullable": true}], "title": "Finish Date", "nullable": true}, "archived_at": {"anyOf": [{"type": "string", "format": "date-time", "nullable": true}], "title": "Archived At", "nullable": true}, "type": {"anyOf": [{"type": "string", "maxLength": 64, "nullable": true}], "title": "Type", "description": "zerocopter_core_rails: zerocopter-core-rails<br/>dummy_program: dummy_program<br/>cvd: cvd<br/>bugbounty: bugbounty<br/>dht: dht<br/>ResponsibleDisclosurePolicy: ResponsibleDisclosurePolicy<br/>program: Program<br/>schedule_rule: ScheduleRule", "default": "cvd", "nullable": true}, "public": {"anyOf": [{"type": "boolean", "nullable": true}], "title": "Public", "default": false}, "project_id": {"type": "string", "format": "uuid", "title": "Project Id"}, "organization_id": {"type": "string", "format": "uuid", "title": "Organization Id"}, "status": {"allOf": [{"$ref": "#/components/schemas/ProgramStatus"}], "description": "", "readOnly": true}}, "additionalProperties": false, "type": "object", "required": ["logo_content_type", "logo_file_size", "logo_updated_at", "created_at", "updated_at", "id", "name", "description", "slug", "accepted_at", "submitted_at", "rejected_at", "start_date", "finish_date", "archived_at", "project_id", "organization_id", "status"], "title": "Program"}, "tortoise__contrib__pydantic__creator__zc_core_api__models__category__CategoryType__leaf": {"properties": {"created_at": {"type": "string", "format": "date-time", "title": "Created At", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At", "readOnly": true}, "id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Id"}, "type": {"type": "string", "maxLength": 255, "title": "Type"}, "code": {"type": "string", "maxLength": 255, "title": "Code"}}, "additionalProperties": false, "type": "object", "required": ["created_at", "updated_at", "id", "type", "code"], "title": "CategoryType"}, "tortoise__contrib__pydantic__creator__zc_core_api__models__organization__Organization__leaf": {"properties": {"created_at": {"type": "string", "format": "date-time", "title": "Created At", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At", "readOnly": true}, "id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Id"}, "name": {"type": "string", "maxLength": 255, "title": "Name"}, "website": {"anyOf": [{"type": "string", "maxLength": 255, "nullable": true}], "title": "Website", "nullable": true}, "slug": {"anyOf": [{"type": "string", "maxLength": 255, "nullable": true}], "title": "Slug", "nullable": true}, "logo": {"anyOf": [{"type": "string", "maxLength": 255, "nullable": true}], "title": "Logo", "nullable": true}}, "additionalProperties": false, "type": "object", "required": ["created_at", "updated_at", "id", "name", "website", "slug", "logo"], "title": "Organization"}, "tortoise__contrib__pydantic__creator__zc_core_api__models__user__User__leaf": {"properties": {"created_at": {"type": "string", "format": "date-time", "title": "Created At", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At", "readOnly": true}, "id": {"anyOf": [{"type": "string", "format": "uuid", "nullable": true}], "title": "Id"}, "first_name": {"anyOf": [{"type": "string", "maxLength": 255, "nullable": true}], "title": "First Name", "nullable": true}, "last_name": {"anyOf": [{"type": "string", "maxLength": 255, "nullable": true}], "title": "Last Name", "nullable": true}, "email": {"type": "string", "maxLength": 255, "title": "Email"}, "username": {"type": "string", "maxLength": 255, "title": "Username"}, "onboarded": {"anyOf": [{"type": "boolean", "nullable": true}], "title": "Onboarded", "default": false, "nullable": true}}, "additionalProperties": false, "type": "object", "required": ["created_at", "updated_at", "id", "first_name", "last_name", "email", "username"], "title": "User"}}, "securitySchemes": {"OAuth2PasswordBearer": {"type": "oauth2", "flows": {"password": {"scopes": {}, "tokenUrl": "/api/v1/login/access-token"}}}}}}